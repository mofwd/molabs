name: Chore / Technical Task
description: Technical work, refactoring, infrastructure, or maintenance
title: ""
labels: ["chore"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Chores are technical tasks that improve infrastructure, reduce technical debt, or enhance developer experience. They typically have no direct user-facing impact but enable better, faster, or safer development.

  - type: dropdown
    id: task-type
    attributes:
      label: Task Type
      description: What kind of engineering work is this?
      options:
        - Refactoring - Improve code structure
        - Technical Debt - Address accumulated debt
        - Performance - Optimize performance
        - Security - Security improvements
        - Infrastructure - DevOps/Infrastructure
        - Testing - Add/improve tests
        - Documentation - Technical docs
        - Dependencies - Update/maintain dependencies
        - Tooling - Developer experience
    validations:
      required: true

  - type: textarea
    id: technical-context
    attributes:
      label: Technical Context
      description: What's the current state and why does this need attention?
      placeholder: |
        Example: Our authentication middleware is duplicated across 5 endpoints, making security updates risky and time-consuming. Each instance has slightly different logic, creating inconsistent behavior.
    validations:
      required: true

  - type: textarea
    id: hypothesis
    attributes:
      label: Hypothesis / Value Proposition
      description: What will improve and why does it matter?
      placeholder: |
        We believe that consolidating auth middleware into a single, tested module
        will reduce security risks and maintenance burden.
        
        We'll know we're right when:
        - Security updates can be applied in one place
        - All endpoints have consistent auth behavior
        - Test coverage for auth reaches 90%
        - Auth-related bugs decrease by 80%
    validations:
      required: true

  - type: textarea
    id: technical-approach
    attributes:
      label: Technical Approach
      description: How should this be implemented?
      placeholder: |
        - Step 1: Extract common auth logic
        - Step 2: Create middleware function
        - Step 3: Replace instances
        - Step 4: Add tests
    validations:
      required: false

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: How will we verify this is complete?
      placeholder: |
        ```gherkin
        Scenario: Technical improvement is complete
          Given [current state]
          When [change is implemented]
          Then [observable improvement]
          And [tests verify behavior]
        
        Scenario: No regression
          Given [existing functionality]
          When [refactor is applied]
          Then [functionality still works]
          And [performance meets baseline]
        ```
      value: |
        ```gherkin
        Scenario: Implementation complete
          Given 
          When 
          Then 
          And 
        
        Scenario: Verification
          Given 
          When 
          Then 
        ```
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How urgent is this work?
      options:
        - Critical - Blocking or security risk
        - High - Significant tech debt
        - Medium - Should address soon
        - Low - Nice to have
    validations:
      required: true

  - type: textarea
    id: impact
    attributes:
      label: Impact
      description: What's affected by this change?
      placeholder: |
        - Files/modules: [list affected areas]
        - Breaking changes: [yes/no, details]
        - Dependencies: [any new/removed dependencies]
        - Performance: [expected impact]
    validations:
      required: false

  - type: textarea
    id: testing-strategy
    attributes:
      label: Testing Strategy
      description: How should this be tested?
      placeholder: |
        - Unit tests for [specific functions]
        - Integration tests for [workflows]
        - Manual testing for [scenarios]
    validations:
      required: false

  - type: textarea
    id: risks
    attributes:
      label: Risks & Considerations
      description: What could go wrong? What should we watch for?
      placeholder: Potential breaking changes, performance implications, etc.
    validations:
      required: false

  - type: textarea
    id: related-issues
    attributes:
      label: Related Issues
      description: Links to related issues, PRs, or discussions
      placeholder: |
        - Part of Epic #10
        - Fixes #123
        - Related to #456
        - Blocked by #789
    validations:
      required: false

  - type: textarea
    id: parent-epic
    attributes:
      label: Parent Epic
      description: Which epic does this chore belong to?
      placeholder: "Part of Epic #15 - ProxMox Automation"
    validations:
      required: false

  - type: textarea
    id: additional-context
    attributes:
      label: Additional Context
      description: Any other relevant information
      placeholder: Links to docs, RFCs, benchmarks, architecture diagrams, etc.
    validations:
      required: false